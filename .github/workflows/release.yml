name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      # Update uv.lock when release-please creates/updates a PR
      - name: Checkout release PR branch
        if: ${{ steps.release.outputs.pr }}
        uses: actions/checkout@v5
        with:
          ref: ${{ fromJson(steps.release.outputs.pr).headBranchName }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        if: ${{ steps.release.outputs.pr }}
        uses: astral-sh/setup-uv@v7

      - name: Update uv.lock with new version
        if: ${{ steps.release.outputs.pr }}
        run: |
          uv lock

      - name: Commit updated uv.lock to release PR
        if: ${{ steps.release.outputs.pr }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add uv.lock
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to uv.lock"
          else
            git commit -m "chore: update uv.lock for release"
            git push
          fi

  # Build and upload artifacts when a release is created
  build-artifacts:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Build package
        run: |
          uv pip install --system build
          python -m build

      - name: Validate built distributions
        run: |
          echo "Built packages:"
          ls -la dist/
          echo ""
          echo "Package contents:"
          tar -tzf dist/*.tar.gz | head -20

      - name: Upload build artifacts to GitHub Release
        uses: actions/upload-artifact@v5
        with:
          name: python-packages-${{ needs.release-please.outputs.tag_name }}
          path: dist/
          retention-days: 90

      - name: Add artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: dist/*
