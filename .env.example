# ==============================================================================
# Required Configuration
# ==============================================================================

# Find in Azure AI Foundry: https://ai.azure.com → Project → Azure OpenAI Endpoint
AZURE_OPENAI_ENDPOINT=

# Find in Azure AI Foundry: https://ai.azure.com → Project → Project connection string
AZURE_AI_PROJECT_CONNECTION_STRING=

# ==============================================================================
# Override: Model Configuration (defaults shown)
# ==============================================================================
# AZURE_OPENAI_DEPLOYMENT_NAME=gpt-5-mini
# AZURE_OPENAI_API_VERSION=2025-03-01-preview


# ==============================================================================
# Authentication
# ==============================================================================
# RECOMMENDED: Use CLI authentication (no tokens in .env!)
#   az login         # For Azure OpenAI
#   gh auth login    # For GitHub (optional - increases API rate limits)
#   glab auth login  # For GitLab (optional - only if using GitLab features)
#
# ALTERNATIVE: Use API keys/tokens (if CLI tools not available)
# AZURE_OPENAI_API_KEY=
# GITHUB_TOKEN=
# GITLAB_TOKEN=
#
# Authentication Priority:
#   - GitHub: gh CLI → GITHUB_TOKEN → unauthenticated (60 req/hour)
#   - GitLab: glab CLI → GITLAB_TOKEN → none
#   - Azure: az CLI → AZURE_OPENAI_API_KEY


# ==============================================================================
# Optional: Organization & Repository Configuration
# ==============================================================================
# GITHUB_SPI_ORGANIZATION=azure
# GITHUB_SPI_REPO=azure/osdu-spi
# GITHUB_SPI_BRANCH=main
# OSDU_AGENT_REPOSITORIES=partition,legal,entitlements,schema,file,storage,indexer,indexer-queue,search,workflow
# OSDU_AGENT_REPOS_ROOT=./repos


# ==============================================================================
# Optional: Local Logging Configuration
# ==============================================================================
# Enable local log files for copilot workflows (status, test, vulns, depends, fork)
# If not set: Logs only to console
# If set: Creates timestamped log files in the specified directory
# OSDU_AGENT_LOG_DIRECTORY=./logs

# OpenTelemetry logging level (for debugging observability issues)
# Options: debug, info, warning, error
# Default: info
# OTEL_LOG_LEVEL=info
# OTEL_PYTHON_LOG_LEVEL=info


# ==============================================================================
# Optional: MCP Server Configuration
# ==============================================================================
# MAVEN_MCP_VERSION=mvn-mcp-server==2.3.0  # Pin Maven MCP Server version
# OSDU_MCP_VERSION=mvn-mcp-server==1.0.0   # Pin OSDU MCP Server version
# ENABLE_OSDU_MCP_SERVER=true              # Enable OSDU MCP Server